1.从docker-hub上搜索拉取镜像

docker pull consul

2.启动镜像

docker run -d --restart=unless-stopped --name consulServer --net=host -e 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}' consul agent -server -bind={ip地址}  -bootstrap-expect=1 -ui -client 0.0.0.0

-d 后台静默启动

--restart=unless-stopped  不管退出状态码是什么始终重启容器，不过当daemon启动时，如果容器之前已经为停止状态，不要尝试启动它

--name docker容器的名称

–net=host docker参数, 使得docker容器越过了netnamespace的隔离，免去手动指定端口映射的步骤

-server consul支持以server或client的模式运行, server是服务发现模块的核心, client主要用于转发请求

-advertise 将本机私有IP传递到consul

-bootstrap-expect 指定consul将等待几个节点连通，成为一个完整的集群

-retry-join 指定要加入的consul节点地址，失败会重试, 可多次指定不同的地址

-client consul绑定在哪个client地址上，这个地址提供HTTP、DNS、RPC等服务，默认是127.0.0.1 ，0.0.0.0 表示任何地址可以访问

-bind 该地址用来在集群内部的通讯，集群内的所有节点到地址都必须是可达的，默认是0.0.0.0

-allow_stale 设置为true, 表明可以从consul集群的任一server节点获取dns信息, false则表明每次请求都会经过consul server leader

-ui  提供图形化的界面。

3.验证服务

打开浏览器，输入：http://ip:8500后会出现界面既表示成功

